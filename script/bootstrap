#!/usr/bin/env bash
set -e

# Debug mode check
[[ "$1" == "--debug" || -o xtrace ]] && DEBUG_ENABLED=1

# Get the root dotfiles folder
DFSCRIPTSDIR=$(dirname $0)
cd $DFSCRIPTSDIR/..
DOTFILESDIR=$(pwd -P)

# Which OS is this?
[[ $(uname -s) == "Darwin" ]] && export MACOS=1 && export UNIX=1
[[ $(uname -s) == "Linux" ]] && export LINUX=1 && export UNIX=1
uname -s | grep -q "_NT-" && export WINDOWS=1

# Check if script is interactive
STDIN_FILE_DESCRIPTOR="0"
[[ -t $STDIN_FILE_DESCRIPTOR ]] && export IS_INTERACTIVE=1

# Some libraries
source script/terminal
source script/utils
source script/packages
source script/sudo

# Setup debug mode
debug_setup

# Initialise the colours
init_colours

# Run some core prerequisite installs
source script/command-line-tools # For OS X
source script/apt-prerequisites # For Linux

# Run prereg scripts
for PREREG_SCRIPT in $DOTFILESDIR/**/prerequisites.sh; do

    # Skip files in script/
    PREREG_SCRIPT_NAME=${PREREG_SCRIPT#$DOTFILESDIR/}
    echo $PREREG_SCRIPT_NAME | egrep -q '^script/' && continue

    # Run the script
    source $PREREG_SCRIPT

done

# Get OMZ and install it to oh-my-zsh-core
OMZ_ROOT=$DOTFILESDIR/oh-my-zsh-core
source script/download-omz

# Download private dotfiles repos, useful for repos that contain sensitive data
source script/download-private-repos

# Run bootstrap scripts in all topic folders
for BOOTSTRAP_SCRIPT in $DOTFILESDIR/**/bootstrap.sh; do

    # Skip files in script/
    BOOTSTRAP_SCRIPT_NAME=${BOOTSTRAP_SCRIPT#$DOTFILESDIR/}
    echo $BOOTSTRAP_SCRIPT_NAME | egrep -p '^script/' && continue

    # Run the script
    source $BOOTSTRAP_SCRIPT

done
